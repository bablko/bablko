{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","open","setOpen","wrong","setWrong","kod","setKod","console","log","checkCode","length","i","className","type","value","onChange","event","target","onClick","src","label","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA+DeA,MA1Df,WAAgB,IAAD,EAESC,IAAMC,UAAS,GAFxB,mBAERC,EAFQ,KAEFC,EAFE,OAGWH,IAAMC,UAAS,GAH1B,mBAGRG,EAHQ,KAGDC,EAHC,OAIOL,IAAMC,SAAS,IAJtB,mBAIRK,EAJQ,KAIHC,EAJG,KAMbC,QAAQC,IAAI,MAEZ,IAAMC,EAAY,WAChB,GAAmB,IAAfJ,EAAIK,OAGN,OAFAR,GAAQ,QACRE,GAAS,GAIX,IAAK,IAAIO,EAAI,EAAGA,EAAIN,EAAIK,OAAQC,IAC9B,GAAIN,EAAIM,GAAK,KAAON,EAAIM,GAAK,IAG3B,OAFAT,GAAQ,QACRE,GAAS,GAIbF,GAAQ,GACRE,GAAS,IAUX,OACE,qBAAKQ,UAAU,iBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAf,mCAGA,sBAAKA,UAAU,SAAf,WACIX,GAAQ,sBAAKW,UAAU,YAAf,UACV,qBAAKA,UAAU,WAAf,iCAEA,uBAAOC,KAAK,OAAOC,MAAOT,EAAKU,SAjBrB,SAACC,GACjBV,EAAOU,EAAMC,OAAOH,UAiBd,qBAAKF,UAAU,WAAWM,QAAST,EAAnC,mBACGN,GAAS,qBAAKS,UAAU,WAAWM,QAAST,EAAnC,qCAEXR,GAAQ,qBAAKW,UAAU,YAAf,SACL,qBAAKO,IAAI,0EAA0EC,MAAM,kBAAkBC,IAAI,gCCzC9GC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ecf6434.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\n\nfunction App() {\n\n  let [open, setOpen] = React.useState(false);\n  let [wrong, setWrong] = React.useState(false);\n  let [kod, setKod] = React.useState('')\n\n  console.log(\";)\")\n\n  const checkCode = () => {\n    if (kod.length !== 6){\n      setOpen(false);\n      setWrong(true);\n      return;\n    }\n\n    for (var i = 0; i < kod.length; i++) {\n      if (kod[i] < '0' || kod[i] > '9'){\n        setOpen(false);\n        setWrong(true);\n        return;  \n      }\n    }\n    setOpen(true);\n    setWrong(false);\n  }\n\n  const updateKod = (event) => {\n    setKod(event.target.value);\n  }\n\n\n\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"input-box-out\">\n        <div className=\"logo\">\n          Jabłka i gruszki\n        </div>\n        <div className=\"stripe\">\n          {!open && <div className=\"input-box\">\n          <div className=\"question\" >Podaj 6 cyfrowy kod</div>\n            \n          <input type=\"text\" value={kod} onChange={updateKod} />\n          <div className=\"question\" onClick={checkCode}>Dalej</div>\n            {wrong && <div className=\"question\" onClick={checkCode}>Błędny kod</div>}\n          </div>}\n          {open && <div className=\"input-box\">\n              <img src=\"https://i.pinimg.com/564x/65/b7/0b/65b70bd75ff88d9e7be5c9634f51e95a.jpg\" label=\"49 3425 8527995\" alt=\"jelenie i reszta\" />\n          \n          </div>}\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}